/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: tendermint/crypto/keys.proto */

#ifndef PROTOBUF_C_tendermint_2fcrypto_2fkeys_2eproto__INCLUDED
#define PROTOBUF_C_tendermint_2fcrypto_2fkeys_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "gogoproto/gogo.pb-c.h"

typedef struct Tendermint__Crypto__PublicKey Tendermint__Crypto__PublicKey;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  TENDERMINT__CRYPTO__PUBLIC_KEY__SUM__NOT_SET = 0,
  TENDERMINT__CRYPTO__PUBLIC_KEY__SUM_ED25519 = 1,
  TENDERMINT__CRYPTO__PUBLIC_KEY__SUM_SECP256K1 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(TENDERMINT__CRYPTO__PUBLIC_KEY__SUM__CASE)
} Tendermint__Crypto__PublicKey__SumCase;

/*
 * PublicKey defines the keys available for use with Validators
 */
struct  Tendermint__Crypto__PublicKey
{
  ProtobufCMessage base;
  Tendermint__Crypto__PublicKey__SumCase sum_case;
  union {
    ProtobufCBinaryData ed25519;
    ProtobufCBinaryData secp256k1;
  };
};
#define TENDERMINT__CRYPTO__PUBLIC_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tendermint__crypto__public_key__descriptor) \
    , TENDERMINT__CRYPTO__PUBLIC_KEY__SUM__NOT_SET, {0} }


/* Tendermint__Crypto__PublicKey methods */
void   tendermint__crypto__public_key__init
                     (Tendermint__Crypto__PublicKey         *message);
size_t tendermint__crypto__public_key__get_packed_size
                     (const Tendermint__Crypto__PublicKey   *message);
size_t tendermint__crypto__public_key__pack
                     (const Tendermint__Crypto__PublicKey   *message,
                      uint8_t             *out);
size_t tendermint__crypto__public_key__pack_to_buffer
                     (const Tendermint__Crypto__PublicKey   *message,
                      ProtobufCBuffer     *buffer);
Tendermint__Crypto__PublicKey *
       tendermint__crypto__public_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tendermint__crypto__public_key__free_unpacked
                     (Tendermint__Crypto__PublicKey *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Tendermint__Crypto__PublicKey_Closure)
                 (const Tendermint__Crypto__PublicKey *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor tendermint__crypto__public_key__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_tendermint_2fcrypto_2fkeys_2eproto__INCLUDED */
