/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_PLANETMINTGO_DAO_PLANETMINTGO_DAO_CHALLENGE_PB_H_INCLUDED
#define PB_PLANETMINTGO_DAO_PLANETMINTGO_DAO_CHALLENGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _planetmintgo_dao_Challenge {
    pb_callback_t initiator;
    pb_callback_t challenger;
    pb_callback_t challengee;
    int64_t height;
    bool success;
    bool finished;
} planetmintgo_dao_Challenge;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define planetmintgo_dao_Challenge_init_default  {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0}
#define planetmintgo_dao_Challenge_init_zero     {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define planetmintgo_dao_Challenge_initiator_tag 1
#define planetmintgo_dao_Challenge_challenger_tag 2
#define planetmintgo_dao_Challenge_challengee_tag 3
#define planetmintgo_dao_Challenge_height_tag    4
#define planetmintgo_dao_Challenge_success_tag   5
#define planetmintgo_dao_Challenge_finished_tag  6

/* Struct field encoding specification for nanopb */
#define planetmintgo_dao_Challenge_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   initiator,         1) \
X(a, CALLBACK, SINGULAR, STRING,   challenger,        2) \
X(a, CALLBACK, SINGULAR, STRING,   challengee,        3) \
X(a, STATIC,   SINGULAR, INT64,    height,            4) \
X(a, STATIC,   SINGULAR, BOOL,     success,           5) \
X(a, STATIC,   SINGULAR, BOOL,     finished,          6)
#define planetmintgo_dao_Challenge_CALLBACK pb_default_field_callback
#define planetmintgo_dao_Challenge_DEFAULT NULL

extern const pb_msgdesc_t planetmintgo_dao_Challenge_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define planetmintgo_dao_Challenge_fields &planetmintgo_dao_Challenge_msg

/* Maximum encoded size of messages (where known) */
/* planetmintgo_dao_Challenge_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
