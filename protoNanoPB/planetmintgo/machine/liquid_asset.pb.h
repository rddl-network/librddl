/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_PLANETMINTGO_MACHINE_PLANETMINTGO_MACHINE_LIQUID_ASSET_PB_H_INCLUDED
#define PB_PLANETMINTGO_MACHINE_PLANETMINTGO_MACHINE_LIQUID_ASSET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _planetmintgo_machine_LiquidAsset {
    pb_callback_t machineID;
    pb_callback_t machineAddress;
    pb_callback_t assetID;
    bool registered;
} planetmintgo_machine_LiquidAsset;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define planetmintgo_machine_LiquidAsset_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define planetmintgo_machine_LiquidAsset_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define planetmintgo_machine_LiquidAsset_machineID_tag 1
#define planetmintgo_machine_LiquidAsset_machineAddress_tag 2
#define planetmintgo_machine_LiquidAsset_assetID_tag 3
#define planetmintgo_machine_LiquidAsset_registered_tag 4

/* Struct field encoding specification for nanopb */
#define planetmintgo_machine_LiquidAsset_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   machineID,         1) \
X(a, CALLBACK, SINGULAR, STRING,   machineAddress,    2) \
X(a, CALLBACK, SINGULAR, STRING,   assetID,           3) \
X(a, STATIC,   SINGULAR, BOOL,     registered,        4)
#define planetmintgo_machine_LiquidAsset_CALLBACK pb_default_field_callback
#define planetmintgo_machine_LiquidAsset_DEFAULT NULL

extern const pb_msgdesc_t planetmintgo_machine_LiquidAsset_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define planetmintgo_machine_LiquidAsset_fields &planetmintgo_machine_LiquidAsset_msg

/* Maximum encoded size of messages (where known) */
/* planetmintgo_machine_LiquidAsset_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
